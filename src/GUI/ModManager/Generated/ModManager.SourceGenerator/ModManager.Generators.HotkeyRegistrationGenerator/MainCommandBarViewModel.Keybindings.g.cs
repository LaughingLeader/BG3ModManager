// <auto-generated/>

namespace ModManager.ViewModels.Main;

public partial class MainCommandBarViewModel
{
	
	public void RegisterKeybindings()
	{
		var keys = Locator.Current.GetService<AppKeysService>();
		if (keys == null) throw new Exception("Failed to get AppKeysService - Is it registered?");
		keys.RegisterCommand("MainCommandBarViewModel_AddNewOrderCommand", "Add New Order", AddNewOrderCommand, Avalonia.Input.Key.M);
		keys.RegisterCommand("MainCommandBarViewModel_CheckForAppUpdatesCommand", "Check For App Updates", CheckForAppUpdatesCommand, Avalonia.Input.Key.U);
		keys.RegisterCommand("MainCommandBarViewModel_ExportModsToZipAsCommand", "Export Order to Archive As...", ExportModsToZipAsCommand, Avalonia.Input.Key.R, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Control | Avalonia.Input.KeyModifiers.Shift);
		keys.RegisterCommand("MainCommandBarViewModel_ExportModsToZipCommand", "Export Order to Archive (.zip)", ExportModsToZipCommand, Avalonia.Input.Key.R, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ExportOrderCommand", "Export Order to Game", ExportOrderCommand, Avalonia.Input.Key.E, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_LaunchGameCommand", "Launch Game", LaunchGameCommand, Avalonia.Input.Key.G, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenDonationPageCommand", "Donate a Coffee...", OpenDonationPageCommand, Avalonia.Input.Key.F10);
		keys.RegisterCommand("MainCommandBarViewModel_OpenGitHubRepoCommand", "Open Repository Page...", OpenGitHubRepoCommand, Avalonia.Input.Key.F11);
		keys.RegisterCommand("MainCommandBarViewModel_OpenModsFolderCommand", "Open Mods Folder", OpenModsFolderCommand, Avalonia.Input.Key.D1, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenNexusModsCommand", "Open Nexus Mods Website", OpenNexusModsCommand, Avalonia.Input.Key.D3, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenSteamPageCommand", "Open Steam Store Page", OpenSteamPageCommand, Avalonia.Input.Key.D4, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_RefreshCommand", "Refresh Mods", RefreshCommand, Avalonia.Input.Key.F5);
		keys.RegisterCommand("MainCommandBarViewModel_RefreshModUpdatesCommand", "Refresh Mod Updates", RefreshModUpdatesCommand, Avalonia.Input.Key.F6);
		keys.RegisterCommand("MainCommandBarViewModel_RenameSaveCommand", "Rename Save", RenameSaveCommand);
		keys.RegisterCommand("MainCommandBarViewModel_SaveOrderCommand", "Save Order", SaveOrderCommand, Avalonia.Input.Key.S, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_SaveOrderAsCommand", "Save Order As...", SaveOrderAsCommand, Avalonia.Input.Key.S, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_SaveSettingsSilentlyCommand", "Save Settings", SaveSettingsSilentlyCommand, Avalonia.Input.Key.S, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Control | Avalonia.Input.KeyModifiers.Shift);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleUpdatesViewCommand", "Toggle Updates View", ToggleUpdatesViewCommand, Avalonia.Input.Key.U, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_TogglePakFileExplorerWindowCommand", "Toggle Pak File Explorer Window", TogglePakFileExplorerWindowCommand, Avalonia.Input.Key.P, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleStatsValidatorWindowCommand", "Toggle Stats Validator Window", ToggleStatsValidatorWindowCommand, Avalonia.Input.Key.OemBackslash, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleSettingsWindowCommand", "Toggle Settings Window", ToggleSettingsWindowCommand, Avalonia.Input.Key.OemComma, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleKeybindingsCommand", "Toggle Keybindings Window", ToggleKeybindingsCommand, Avalonia.Input.Key.OemComma, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleThemeModeCommand", "Toggle Dark/Light Mode", ToggleThemeModeCommand, Avalonia.Input.Key.OemComma, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ImportModCommand", "Import Mods...", ImportModCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ImportNexusModsIdsCommand", "", ImportNexusModsIdsCommand);
		keys.RegisterCommand("MainCommandBarViewModel_NewOrderCommand", "", NewOrderCommand);
		keys.RegisterCommand("MainCommandBarViewModel_SaveCommand", "", SaveCommand);
		keys.RegisterCommand("MainCommandBarViewModel_SaveAsCommand", "", SaveAsCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ImportOrderFromSaveCommand", "", ImportOrderFromSaveCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ImportOrderFromSaveAsNewCommand", "", ImportOrderFromSaveAsNewCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ImportOrderFromFileCommand", "", ImportOrderFromFileCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ImportOrderFromZipFileCommand", "", ImportOrderFromZipFileCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ExportOrderToGameCommand", "", ExportOrderToGameCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ExportOrderToListCommand", "", ExportOrderToListCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ExportOrderToZipCommand", "", ExportOrderToZipCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ExportOrderToArchiveAsCommand", "", ExportOrderToArchiveAsCommand);
		keys.RegisterCommand("MainCommandBarViewModel_RefreshCommand", "", RefreshCommand);
		keys.RegisterCommand("MainCommandBarViewModel_RefreshModUpdatesCommand", "", RefreshModUpdatesCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ConfirmCommand", "", ConfirmCommand);
		keys.RegisterCommand("MainCommandBarViewModel_MoveFocusLeftCommand", "", MoveFocusLeftCommand);
		keys.RegisterCommand("MainCommandBarViewModel_MoveFocusRightCommand", "", MoveFocusRightCommand);
		keys.RegisterCommand("MainCommandBarViewModel_SwapListFocusCommand", "", SwapListFocusCommand);
		keys.RegisterCommand("MainCommandBarViewModel_MoveToTopCommand", "", MoveToTopCommand);
		keys.RegisterCommand("MainCommandBarViewModel_MoveToBottomCommand", "", MoveToBottomCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleFilterFocusCommand", "", ToggleFilterFocusCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleFileNameDisplayCommand", "", ToggleFileNameDisplayCommand);
		keys.RegisterCommand("MainCommandBarViewModel_DeleteSelectedModsCommand", "", DeleteSelectedModsCommand);
		keys.RegisterCommand("MainCommandBarViewModel_OpenPreferencesCommand", "", OpenPreferencesCommand);
		keys.RegisterCommand("MainCommandBarViewModel_OpenKeybindingsCommand", "", OpenKeybindingsCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleViewThemeCommand", "", ToggleViewThemeCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleUpdatesViewCommand", "", ToggleUpdatesViewCommand);
		keys.RegisterCommand("MainCommandBarViewModel_OpenModsFolderCommand", "", OpenModsFolderCommand);
		keys.RegisterCommand("MainCommandBarViewModel_OpenGameFolderCommand", "", OpenGameFolderCommand);
		keys.RegisterCommand("MainCommandBarViewModel_OpenWorkshopFolderCommand", "", OpenWorkshopFolderCommand);
		keys.RegisterCommand("MainCommandBarViewModel_OpenLogsFolderCommand", "", OpenLogsFolderCommand);
		keys.RegisterCommand("MainCommandBarViewModel_LaunchGameCommand", "", LaunchGameCommand);
		keys.RegisterCommand("MainCommandBarViewModel_DownloadScriptExtenderCommand", "", DownloadScriptExtenderCommand);
		keys.RegisterCommand("MainCommandBarViewModel_DownloadNXMLinkCommand", "", DownloadNXMLinkCommand);
		keys.RegisterCommand("MainCommandBarViewModel_OpenCollectionDownloaderWindowCommand", "", OpenCollectionDownloaderWindowCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ExtractSelectedModsCommand", "", ExtractSelectedModsCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ExtractSelectedAdventureCommand", "", ExtractSelectedAdventureCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleVersionGeneratorWindowCommand", "", ToggleVersionGeneratorWindowCommand);
		keys.RegisterCommand("MainCommandBarViewModel_SpeakActiveModOrderCommand", "", SpeakActiveModOrderCommand);
		keys.RegisterCommand("MainCommandBarViewModel_CheckForUpdatesCommand", "", CheckForUpdatesCommand);
		keys.RegisterCommand("MainCommandBarViewModel_OpenDonationLinkCommand", "", OpenDonationLinkCommand);
		keys.RegisterCommand("MainCommandBarViewModel_OpenAboutWindowCommand", "", OpenAboutWindowCommand);
		keys.RegisterCommand("MainCommandBarViewModel_OpenRepositoryPageCommand", "", OpenRepositoryPageCommand);
	}
}
