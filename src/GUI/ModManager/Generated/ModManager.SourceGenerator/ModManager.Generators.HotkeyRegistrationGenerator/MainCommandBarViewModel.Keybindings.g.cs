// <auto-generated/>

namespace ModManager.ViewModels.Main;

public partial class MainCommandBarViewModel
{
	
	public void RegisterKeybindings()
	{
		var keys = Locator.Current.GetService<AppKeysService>();
		if (keys == null) throw new Exception("Failed to get AppKeysService - Is it registered?");
		keys.RegisterCommand("MainCommandBarViewModel_AddNewOrderCommand", "Add New Order", AddNewOrderCommand, Avalonia.Input.Key.M);
		keys.RegisterCommand("MainCommandBarViewModel_CheckForAppUpdatesCommand", "Check For App Updates", CheckForAppUpdatesCommand, Avalonia.Input.Key.U);
		keys.RegisterCommand("MainCommandBarViewModel_ExportModsToZipAsCommand", "Export Order to Archive As...", ExportModsToZipAsCommand, Avalonia.Input.Key.R, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Control | Avalonia.Input.KeyModifiers.Shift);
		keys.RegisterCommand("MainCommandBarViewModel_ExportModsToZipCommand", "Export Order to Archive (.zip)", ExportModsToZipCommand, Avalonia.Input.Key.R, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ExportOrderCommand", "Export Order to Game", ExportOrderCommand, Avalonia.Input.Key.E, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_LaunchGameCommand", "Launch Game", LaunchGameCommand, Avalonia.Input.Key.G, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenDonationPageCommand", "Donate a Coffee...", OpenDonationPageCommand, Avalonia.Input.Key.F10);
		keys.RegisterCommand("MainCommandBarViewModel_OpenGitHubRepoCommand", "Open Repository Page...", OpenGitHubRepoCommand, Avalonia.Input.Key.F11);
		keys.RegisterCommand("MainCommandBarViewModel_OpenModsFolderCommand", "Open Mods Folder", OpenModsFolderCommand, Avalonia.Input.Key.D1, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenNexusModsCommand", "Open Nexus Mods Website", OpenNexusModsCommand, Avalonia.Input.Key.D3, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenSteamPageCommand", "Open Steam Store Page", OpenSteamPageCommand, Avalonia.Input.Key.D4, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_RefreshCommand", "Refresh Mods", RefreshCommand, Avalonia.Input.Key.F5);
		keys.RegisterCommand("MainCommandBarViewModel_ReloadModsCommand", "Reload All Mods", ReloadModsCommand, Avalonia.Input.Key.F5, Avalonia.Input.KeyModifiers.Shift);
		keys.RegisterCommand("MainCommandBarViewModel_RefreshModUpdatesCommand", "Refresh Mod Updates", RefreshModUpdatesCommand, Avalonia.Input.Key.F6);
		keys.RegisterCommand("MainCommandBarViewModel_RenameSaveCommand", "Rename Save", RenameSaveCommand);
		keys.RegisterCommand("MainCommandBarViewModel_SaveOrderCommand", "Save Order", SaveOrderCommand, Avalonia.Input.Key.S, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_SaveOrderAsCommand", "Save Order As...", SaveOrderAsCommand, Avalonia.Input.Key.S, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_SaveSettingsSilentlyCommand", "Save Settings", SaveSettingsSilentlyCommand, Avalonia.Input.Key.S, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Control | Avalonia.Input.KeyModifiers.Shift);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleUpdatesViewCommand", "Toggle Updates View", ToggleUpdatesViewCommand, Avalonia.Input.Key.U, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_TogglePakFileExplorerWindowCommand", "Toggle Pak File Explorer Window", TogglePakFileExplorerWindowCommand, Avalonia.Input.Key.P, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleStatsValidatorWindowCommand", "Toggle Stats Validator Window", ToggleStatsValidatorWindowCommand, Avalonia.Input.Key.OemBackslash, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleSettingsWindowCommand", "Toggle Settings Window", ToggleSettingsWindowCommand, Avalonia.Input.Key.OemComma, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleKeybindingsCommand", "Toggle Keybindings Window", ToggleKeybindingsCommand, Avalonia.Input.Key.OemComma, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleThemeModeCommand", "Toggle Dark/Light Mode", ToggleThemeModeCommand, Avalonia.Input.Key.OemComma, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ImportModCommand", "Import Mods...", ImportModCommand, Avalonia.Input.Key.O, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ImportNexusModsIdsCommand", "Import Nexus Mods Data from Archives...", ImportNexusModsIdsCommand);
		keys.RegisterCommand("MainCommandBarViewModel_NewOrderCommand", "Add New Order", NewOrderCommand, Avalonia.Input.Key.N, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_SaveCommand", "Save Order", SaveCommand, Avalonia.Input.Key.S, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_SaveAsCommand", "Save Order As...", SaveAsCommand, Avalonia.Input.Key.S, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ImportOrderFromSaveCommand", "Import Order from Save...", ImportOrderFromSaveCommand, Avalonia.Input.Key.I, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ImportOrderFromSaveAsNewCommand", "Import Order from Save As New Order...", ImportOrderFromSaveAsNewCommand, Avalonia.Input.Key.I, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Control | Avalonia.Input.KeyModifiers.Shift);
		keys.RegisterCommand("MainCommandBarViewModel_ImportOrderFromFileCommand", "Import Order from File...", ImportOrderFromFileCommand, Avalonia.Input.Key.O, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Control | Avalonia.Input.KeyModifiers.Shift);
		keys.RegisterCommand("MainCommandBarViewModel_ImportOrderFromZipFileCommand", "Import Order & Mods from Archive...", ImportOrderFromZipFileCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ExportOrderToGameCommand", "Export Order to Game", ExportOrderToGameCommand, Avalonia.Input.Key.E, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ExportOrderToListCommand", "Export Order to Text File...", ExportOrderToListCommand, Avalonia.Input.Key.E, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Control | Avalonia.Input.KeyModifiers.Shift);
		keys.RegisterCommand("MainCommandBarViewModel_ExportOrderToZipCommand", "Export Order to Archive (.zip)", ExportOrderToZipCommand, Avalonia.Input.Key.R, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ExportOrderToArchiveAsCommand", "Export Order to Archive As...", ExportOrderToArchiveAsCommand, Avalonia.Input.Key.R, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Control | Avalonia.Input.KeyModifiers.Shift);
		keys.RegisterCommand("MainCommandBarViewModel_MoveSelectedModsCommand", "Moved Selected Mods to Opposite List", MoveSelectedModsCommand, Avalonia.Input.Key.Return);
		keys.RegisterCommand("MainCommandBarViewModel_FocusActiveModsCommand", "Focus Active Mods List", FocusActiveModsCommand, Avalonia.Input.Key.Left);
		keys.RegisterCommand("MainCommandBarViewModel_FocusInactiveModsCommand", "Focus Inactive Mods List", FocusInactiveModsCommand, Avalonia.Input.Key.Right);
		keys.RegisterCommand("MainCommandBarViewModel_SwapListFocusCommand", "Go to Other List", SwapListFocusCommand, Avalonia.Input.Key.Tab);
		keys.RegisterCommand("MainCommandBarViewModel_MoveToTopCommand", "Move to Top of Active List", MoveToTopCommand, Avalonia.Input.Key.PageUp, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_MoveToBottomCommand", "Move to Bottom of Active List", MoveToBottomCommand, Avalonia.Input.Key.PageDown, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleFilterFocusCommand", "Toggle Focus Filter for Current List", ToggleFilterFocusCommand, Avalonia.Input.Key.F, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleFileNameDisplayCommand", "Show File Names for Mods", ToggleFileNameDisplayCommand);
		keys.RegisterCommand("MainCommandBarViewModel_DeleteSelectedModsCommand", "Delete Selected Mods...", DeleteSelectedModsCommand, Avalonia.Input.Key.Delete);
		keys.RegisterCommand("MainCommandBarViewModel_OpenPreferencesCommand", "Open Preferences", OpenPreferencesCommand, Avalonia.Input.Key.P, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenKeybindingsCommand", "Open Keyboard Shortcuts", OpenKeybindingsCommand, Avalonia.Input.Key.K, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleViewThemeCommand", "Toggle Light/Dark Mode", ToggleViewThemeCommand, Avalonia.Input.Key.L, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenGameFolderCommand", "Open Game Folder", OpenGameFolderCommand, Avalonia.Input.Key.D2, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenSavesFolderCommand", "Open Saves Folder", OpenSavesFolderCommand, Avalonia.Input.Key.D3, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenExtenderDataFolderCommand", "Open Script Extender Data Folder", OpenExtenderDataFolderCommand, Avalonia.Input.Key.D4, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_DownloadScriptExtenderCommand", "Download & Extract the Script Extender...", DownloadScriptExtenderCommand);
		keys.RegisterCommand("MainCommandBarViewModel_DownloadNXMLinkCommand", "Download nxm:\\\\ Link...", DownloadNXMLinkCommand);
		keys.RegisterCommand("MainCommandBarViewModel_OpenCollectionDownloaderWindowCommand", "Open Collection Downloader Window", OpenCollectionDownloaderWindowCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ExtractAllSelectedModsCommand", "Extract All Selected Mods To...", ExtractAllSelectedModsCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ExtractSelectedActiveModsCommand", "Extract Selected Active Mods To...", ExtractSelectedActiveModsCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ExtractSelectedInactiveModsCommand", "Extract Selected Inactive Mods To...", ExtractSelectedInactiveModsCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ExtractSelectedAdventureCommand", "Extract Active Adventure Mod To...", ExtractSelectedAdventureCommand);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleVersionGeneratorWindowCommand", "Toggle Version Generator Window", ToggleVersionGeneratorWindowCommand, Avalonia.Input.Key.G, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_SpeakActiveModOrderCommand", "Speak Active Order", SpeakActiveModOrderCommand, Avalonia.Input.Key.Home, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_StopSpeakingCommand", "Stop Speaking", StopSpeakingCommand, Avalonia.Input.Key.Home, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Control | Avalonia.Input.KeyModifiers.Shift);
		keys.RegisterCommand("MainCommandBarViewModel_CheckForUpdatesCommand", "Check for Updates...", CheckForUpdatesCommand, Avalonia.Input.Key.F7);
		keys.RegisterCommand("MainCommandBarViewModel_OpenDonationLinkCommand", "Donate a Coffee...", OpenDonationLinkCommand, Avalonia.Input.Key.F10);
		keys.RegisterCommand("MainCommandBarViewModel_OpenAboutWindowCommand", "About", OpenAboutWindowCommand, Avalonia.Input.Key.F1);
		keys.RegisterCommand("MainCommandBarViewModel_OpenRepositoryPageCommand", "Open Repository Page...", OpenRepositoryPageCommand, Avalonia.Input.Key.F11);
	}
}
