// <auto-generated/>

namespace ModManager.ViewModels.Main;

public partial class MainCommandBarViewModel
{
	
	public void RegisterKeybindings()
	{
		var keys = Locator.Current.GetService<AppKeysService>();
		if (keys == null) throw new Exception("Failed to get AppKeysService - Is it registered?");
		keys.RegisterCommand("MainCommandBarViewModel_AddNewOrderCommand", "Add New Order", AddNewOrderCommand, Avalonia.Input.Key.M);
		keys.RegisterCommand("MainCommandBarViewModel_CheckForAppUpdatesCommand", "Check For App Updates", CheckForAppUpdatesCommand, Avalonia.Input.Key.U);
		keys.RegisterCommand("MainCommandBarViewModel_ExportModsToZipAsCommand", "Export Order to Archive As...", ExportModsToZipAsCommand, Avalonia.Input.Key.R, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Control | Avalonia.Input.KeyModifiers.Shift);
		keys.RegisterCommand("MainCommandBarViewModel_ExportModsToZipCommand", "Export Order to Archive (.zip)", ExportModsToZipCommand, Avalonia.Input.Key.R, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_ExportOrderCommand", "Export Order to Game", ExportOrderCommand, Avalonia.Input.Key.E, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_LaunchGameCommand", "Launch Game", LaunchGameCommand, Avalonia.Input.Key.G, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenDonationPageCommand", "Donate a Coffee...", OpenDonationPageCommand, Avalonia.Input.Key.F10);
		keys.RegisterCommand("MainCommandBarViewModel_OpenGitHubRepoCommand", "Open Repository Page...", OpenGitHubRepoCommand, Avalonia.Input.Key.F11);
		keys.RegisterCommand("MainCommandBarViewModel_OpenModsFolderCommand", "Open Mods Folder", OpenModsFolderCommand, Avalonia.Input.Key.D1, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenNexusModsCommand", "Open Nexus Mods Website", OpenNexusModsCommand, Avalonia.Input.Key.D3, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_OpenSteamPageCommand", "Open Steam Store Page", OpenSteamPageCommand, Avalonia.Input.Key.D4, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_RefreshCommand", "Refresh Mods", RefreshCommand, Avalonia.Input.Key.F5);
		keys.RegisterCommand("MainCommandBarViewModel_RefreshModUpdatesCommand", "Refresh Mod Updates", RefreshModUpdatesCommand, Avalonia.Input.Key.F6);
		keys.RegisterCommand("MainCommandBarViewModel_RenameSaveCommand", "Rename Save", RenameSaveCommand);
		keys.RegisterCommand("MainCommandBarViewModel_SaveOrderCommand", "Save Order", SaveOrderCommand, Avalonia.Input.Key.S, Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_SaveOrderAsCommand", "Save Order As...", SaveOrderAsCommand, Avalonia.Input.Key.S, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_SaveSettingsSilentlyCommand", "Save Settings", SaveSettingsSilentlyCommand, Avalonia.Input.Key.S, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Control | Avalonia.Input.KeyModifiers.Shift);
		keys.RegisterCommand("MainCommandBarViewModel_ToggleUpdatesViewCommand", "Toggle Updates View", ToggleUpdatesViewCommand, Avalonia.Input.Key.U, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
		keys.RegisterCommand("MainCommandBarViewModel_TogglePakFileExplorerWindowCommand", "Toggle Pak File Explorer Window", TogglePakFileExplorerWindowCommand, Avalonia.Input.Key.P, Avalonia.Input.KeyModifiers.None | Avalonia.Input.KeyModifiers.Alt | Avalonia.Input.KeyModifiers.Control);
	}
}
