// <auto-generated />

using Avalonia;
using Avalonia.Controls;
using Avalonia.Markup.Xaml;

namespace ModManager.Views.Generated
{
    partial class ScriptExtenderSettingsView
    {
        internal global::Avalonia.Controls.TextBlock ExportDefaultExtenderSettingsTextBlock;
        internal global::Avalonia.Controls.TextBlock DeveloperModeTextBlock;
        internal global::Avalonia.Controls.TextBlock CustomProfileTextBlock;
        internal global::Avalonia.Controls.TextBlock CreateConsoleTextBlock;
        internal global::Avalonia.Controls.TextBlock LogFailedCompileTextBlock;
        internal global::Avalonia.Controls.TextBlock EnableLoggingTextBlock;
        internal global::Avalonia.Controls.TextBlock LogCompileTextBlock;
        internal global::Avalonia.Controls.TextBlock LogDirectoryTextBlock;
        internal global::Avalonia.Controls.TextBlock LogRuntimeTextBlock;
        internal global::Avalonia.Controls.TextBlock DisableLauncherTextBlock;
        internal global::Avalonia.Controls.TextBlock DisableStoryMergeTextBlock;
        internal global::Avalonia.Controls.TextBlock DisableStoryPatchingTextBlock;
        internal global::Avalonia.Controls.TextBlock DisableModValidationTextBlock;
        internal global::Avalonia.Controls.TextBlock EnableAchievementsTextBlock;
        internal global::Avalonia.Controls.TextBlock EnableExtensionsTextBlock;
        internal global::Avalonia.Controls.TextBlock SendCrashReportsTextBlock;
        internal global::Avalonia.Controls.TextBlock EnableDebuggerTextBlock;
        internal global::Avalonia.Controls.TextBlock DebuggerPortTextBlock;
        internal global::Avalonia.Controls.TextBlock DumpNetworkStringsTextBlock;
        internal global::Avalonia.Controls.TextBlock DebuggerFlagsTextBlock;
        internal global::Avalonia.Controls.TextBlock EnableLuaDebuggerTextBlock;
        internal global::Avalonia.Controls.TextBlock LuaBuiltinResourceDirectoryTextBlock;
        internal global::Avalonia.Controls.TextBlock ClearOnResetTextBlock;
        internal global::Avalonia.Controls.TextBlock DefaultToClientConsoleTextBlock;
        internal global::Avalonia.Controls.TextBlock ShowPerfWarningsTextBlock;

        /// <summary>
        /// Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
        /// </summary>
        /// <param name="loadXaml">Should the XAML be loaded into the component.</param>

        public void InitializeComponent(bool loadXaml = true)
        {
            if (loadXaml)
            {
                AvaloniaXamlLoader.Load(this);
            }

            ExportDefaultExtenderSettingsTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("ExportDefaultExtenderSettingsTextBlock");
            DeveloperModeTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("DeveloperModeTextBlock");
            CustomProfileTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("CustomProfileTextBlock");
            CreateConsoleTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("CreateConsoleTextBlock");
            LogFailedCompileTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("LogFailedCompileTextBlock");
            EnableLoggingTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("EnableLoggingTextBlock");
            LogCompileTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("LogCompileTextBlock");
            LogDirectoryTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("LogDirectoryTextBlock");
            LogRuntimeTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("LogRuntimeTextBlock");
            DisableLauncherTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("DisableLauncherTextBlock");
            DisableStoryMergeTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("DisableStoryMergeTextBlock");
            DisableStoryPatchingTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("DisableStoryPatchingTextBlock");
            DisableModValidationTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("DisableModValidationTextBlock");
            EnableAchievementsTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("EnableAchievementsTextBlock");
            EnableExtensionsTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("EnableExtensionsTextBlock");
            SendCrashReportsTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("SendCrashReportsTextBlock");
            EnableDebuggerTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("EnableDebuggerTextBlock");
            DebuggerPortTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("DebuggerPortTextBlock");
            DumpNetworkStringsTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("DumpNetworkStringsTextBlock");
            DebuggerFlagsTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("DebuggerFlagsTextBlock");
            EnableLuaDebuggerTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("EnableLuaDebuggerTextBlock");
            LuaBuiltinResourceDirectoryTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("LuaBuiltinResourceDirectoryTextBlock");
            ClearOnResetTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("ClearOnResetTextBlock");
            DefaultToClientConsoleTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("DefaultToClientConsoleTextBlock");
            ShowPerfWarningsTextBlock = this.FindNameScope()?.Find<global::Avalonia.Controls.TextBlock>("ShowPerfWarningsTextBlock");
        }
    }
}
