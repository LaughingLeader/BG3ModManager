// <auto-generated />

using Avalonia;
using Avalonia.Controls;
using Avalonia.Markup.Xaml;

namespace ModManager.Windows
{
    partial class StatsValidatorWindow
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Avalonia.Generators.NameGenerator.InitializeComponentCodeGenerator", "11.3.0.0")]
        internal global::Avalonia.Controls.Button ValidateButton;
        [global::System.CodeDom.Compiler.GeneratedCode("Avalonia.Generators.NameGenerator.InitializeComponentCodeGenerator", "11.3.0.0")]
        internal global::Avalonia.Controls.TextBlock TitleTextBlock;
        [global::System.CodeDom.Compiler.GeneratedCode("Avalonia.Generators.NameGenerator.InitializeComponentCodeGenerator", "11.3.0.0")]
        internal global::Avalonia.Controls.TextBlock TimeTakenTextControl;
        [global::System.CodeDom.Compiler.GeneratedCode("Avalonia.Generators.NameGenerator.InitializeComponentCodeGenerator", "11.3.0.0")]
        internal global::Avalonia.Controls.TreeView EntriesTreeView;
        [global::System.CodeDom.Compiler.GeneratedCode("Avalonia.Generators.NameGenerator.InitializeComponentCodeGenerator", "11.3.0.0")]
        internal global::Avalonia.Controls.Border LockScreen;
        [global::System.CodeDom.Compiler.GeneratedCode("Avalonia.Generators.NameGenerator.InitializeComponentCodeGenerator", "11.3.0.0")]
        internal global::SukiUI.Controls.CircleProgressBar ProgressBarControl;
        [global::System.CodeDom.Compiler.GeneratedCode("Avalonia.Generators.NameGenerator.InitializeComponentCodeGenerator", "11.3.0.0")]
        internal global::Avalonia.Controls.Button CancelButton;

        /// <summary>
        /// Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
        /// </summary>
        /// <param name="loadXaml">Should the XAML be loaded into the component.</param>
        /// <param name="attachDevTools">Should the dev tools be attached.</param>

        [global::System.CodeDom.Compiler.GeneratedCode("Avalonia.Generators.NameGenerator.InitializeComponentCodeGenerator", "11.3.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public void InitializeComponent(bool loadXaml = true, bool attachDevTools = true)
        {
            if (loadXaml)
            {
                AvaloniaXamlLoader.Load(this);
            }

#if DEBUG
            if (attachDevTools)
            {
                this.AttachDevTools();
            }
#endif

            var __thisNameScope__ = this.FindNameScope();
            ValidateButton = __thisNameScope__?.Find<global::Avalonia.Controls.Button>("ValidateButton");
            TitleTextBlock = __thisNameScope__?.Find<global::Avalonia.Controls.TextBlock>("TitleTextBlock");
            TimeTakenTextControl = __thisNameScope__?.Find<global::Avalonia.Controls.TextBlock>("TimeTakenTextControl");
            EntriesTreeView = __thisNameScope__?.Find<global::Avalonia.Controls.TreeView>("EntriesTreeView");
            LockScreen = __thisNameScope__?.Find<global::Avalonia.Controls.Border>("LockScreen");
            ProgressBarControl = __thisNameScope__?.Find<global::SukiUI.Controls.CircleProgressBar>("ProgressBarControl");
            CancelButton = __thisNameScope__?.Find<global::Avalonia.Controls.Button>("CancelButton");
        }
    }
}
