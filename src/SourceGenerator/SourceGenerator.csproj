<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<LangVersion>latest</LangVersion>
		<Nullable>enable</Nullable>

		<GenerateAssemblyInfo>False</GenerateAssemblyInfo>
		<GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>

		<Platforms>AnyCPU;x64</Platforms>
		<PlatformTarget>x64</PlatformTarget>

		<AssemblyName>ModManager.SourceGenerator</AssemblyName>
		<RootNamespace>ModManager</RootNamespace>
	</PropertyGroup>

	<PropertyGroup>
		<DevelopmentDependency>true</DevelopmentDependency>
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<!-- forces SDK to copy dependencies into build output to make packing easier -->
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
		<TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);PackBuildOutputs</TargetsForTfmSpecificContentInPackage>
		<DebugType>full</DebugType>
	</PropertyGroup>

	<PropertyGroup>
		<EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
		<IsRoslynComponent>true</IsRoslynComponent>
		<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
		<!--<CompilerGeneratedFilesOutputPath>Generated</CompilerGeneratedFilesOutputPath>-->
	</PropertyGroup>

	<ItemGroup>
		<!-- Don't include the output from a previous source generator execution into future runs; the */** trick here ensures that there's
  at least one subdirectory, which is our key that it's coming from a source generator as opposed to something that is coming from
  some other tool. -->
		<Compile Remove="$(CompilerGeneratedFilesOutputPath)/*/**/*.cs" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.9.2" PrivateAssets="all" />
		<PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" PrivateAssets="all" />
	</ItemGroup>

	<ItemGroup>
		<None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
	</ItemGroup>
</Project>